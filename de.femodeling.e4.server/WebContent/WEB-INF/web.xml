<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name>  
      Simple Spring HTTP (Porsche FE-Modeling Server)   
   </display-name>
  <description>  
      This is meant as an extremely simple example of using Spring's HTTP  
      Remoting capability.  
   </description>
  <servlet>
    <servlet-name>file_transfers</servlet-name>
    <servlet-class>de.femodeling.e4.server.internal.FileTransferServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>file_transfers</servlet-name>
    <url-pattern>/file_transfers</url-pattern>
  </servlet-mapping>
  <servlet>
    <servlet-name>projects</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>projects</servlet-name>
    <url-pattern>/projects</url-pattern>
  </servlet-mapping>
  <servlet>
    <servlet-name>users</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>users</servlet-name>
    <url-pattern>/users</url-pattern>
  </servlet-mapping>
  <servlet>
    <servlet-name>sessions</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>sessions</servlet-name>
    <url-pattern>/sessions</url-pattern>
  </servlet-mapping>
  <servlet>
    <servlet-name>lock</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>lock</servlet-name>
    <url-pattern>/lock</url-pattern>
  </servlet-mapping>
  <servlet>
    <servlet-name>messages</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>messages</servlet-name>
    <url-pattern>/messages</url-pattern>
  </servlet-mapping>
  <filter>
    <filter-name>ContextFilter</filter-name>
    <filter-class>
			org.springframework.web.filter.DelegatingFilterProxy
		</filter-class>
    <init-param>
      <param-name>targetBeanName</param-name>
      <param-value>contextProviderFilter</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>ContextFilter</filter-name>
    <url-pattern>/projects</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>ContextFilter</filter-name>
    <url-pattern>/sessions</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>ContextFilter</filter-name>
    <url-pattern>/lock</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>ContextFilter</filter-name>
    <url-pattern>/messages</url-pattern>
  </filter-mapping>
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>/WEB-INF/log4j.properties</param-value>
  </context-param>
  <listener>
    <listener-class>
			org.springframework.web.util.Log4jConfigListener
		</listener-class>
  </listener>
  <listener>
    <listener-class>  
         org.springframework.web.context.ContextLoaderListener  
      </listener-class>
  </listener>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>/WEB-INF/spring-http-config.xml</param-value>
  </context-param>
</web-app>